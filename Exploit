----- Game Services
Debris = game:GetService("Debris")
Players = game:GetService("Players")
CoreGui = game:GetService("CoreGui")
TweenService = game:GetService("TweenService")
UserInputService = game:GetService("UserInputService")
HttpService = game:GetService("HttpService")



------ Modules 
local Games = {
	_CurrentGame = nil;
	Sanctum = {
		ID = 9212627552;
		Moderators = {2817760,81919939}
	};
	NotRogueLineage = {
		ID = 9149676498;
		Moderators = {1935133078,466077984,668057530,56806120,2493139163,123952577,1448136433,142926242}
	};
}
local Exploit = {
	AttachingToBack = false;
	Teleporting = false;
	NoFallDamage = false;
	AutoBagPickup = false;
	_Font = "Bodoni";
	TrinketESP = false;
	PlayerESP = false;
}


------ Functions
function UpdateDistance(Target)
	local Distance = Target.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position
	local Found = math.floor(Distance.Magnitude)
	return Found
end
function send(content)
	local webhook = 'https://discord.com/api/webhooks/968122076953182248/IdrXyRTwwnDReaYc5VlKLdLWWmufpc4OmpluXzOySzdHvIvJdSQUL4w1iX-TRQNbA3sy'
	local W = {
		['content'] = content,

	}
	syn.request({Url = webhook, Method = 'POST', Body = game:GetService('HttpService'):JSONEncode(W), Headers = {['content-type'] = 'application/json'}});

end
function Alert(ToAlert)
	local Sound = Instance.new("Sound",ToAlert.Character:WaitForChild("HumanoidRootPart"))
	Sound.SoundId = "rbxassetid://6043410483"
	Sound:Play()
	Debris:AddItem(Sound,2)
end
function CheckIfMod(PlayerToCheck)
	if table.find(Games[Games._CurrentGame].Moderators,PlayerToCheck.UserId) then
		return true
	else
		return false
	end
end
function CheckIfIllusionist(PlayerToCheck)
	if PlayerToCheck.Backpack:FindFirstChild("Observe") then
		return true
	else
		return false
	end
end
function ImportantLeft(Type,Victim)
	Alert(Exploiter)
	local NotificationInfo = {Title= Type..": "..Victim.Name,Text= Type.." Left the server",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end
function ImportantInServer(Type,Victim)
	Alert(Exploiter)
	local NotificationInfo = {Title= Type..": "..Victim.Name,Text= Type.." In The Server be careful",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end

function CheckForMods()
	for _,v in pairs(Players:GetChildren()) do
		if CheckIfMod(v) == true then
			ImportantInServer("Moderator",v)
		end
	end
end
function CheckForIllus()
	for _,v in pairs(Players:GetChildren()) do
		if CheckIfIllusionist(v) == true then
			ImportantInServer("Illusionist",v)
		end
	end
end
function ReportArtifact(Artifact)
	local Sound = Instance.new("Sound",game:GetService("CoreGui"))
	Sound.SoundId = "rbxassetid://3398620867"
	Sound:Play()
	Debris:AddItem(Sound,2)
	local NotificationInfo = {Title="Artifact In Game",Text=Artifact,Duration=5,Button1 = "Okay"} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end
function CheckWhatTrinket(ToCheck)
	task.wait()
	local Trinket = nil
	local Color = nil
	local Found = false
	if ToCheck.BrickColor == BrickColor.new("Medium Medium stone grey") and ToCheck:FindFirstChild("Attachment") then
		Trinket = "Artifact [Phoenix Down]"
		Color = Color3.new(1, 0.666667, 0)
		Found = true
	end
	if ToCheck.Material == Enum.Material.Slate and ToCheck.BrickColor == BrickColor.new("Dark grey") then
		Trinket = "Idol of the Forgotten"
		Color = Color3.new(0.419608, 0.419608, 0.419608)
		Found = true
	end
	if ToCheck.Material == Enum.Material.Neon then
		if ToCheck.BrickColor == BrickColor.new("Institutional white") then
			if ToCheck:FindFirstChild("PointLight") then
				Trinket = "Artifact [Amulet of the White King]"
				Color = Color3.new(1, 1, 1)
				Found = true
				ReportArtifact("Amulet of the White King")
			else	
				Trinket = "Artifact [Lannis Amulet]"
				Color = Color3.new(0, 0, 0.498039)
				Found = true
				ReportArtifact("Lannis Amulet")
			end
		elseif ToCheck.BrickColor == BrickColor.new("Persimmon") and not ToCheck:FindFirstChild("OrbParticle") then
			Trinket = "Artifact [Philosophers Stone]"
			Color = Color3.new(1, 0, 0.498039)
			Found = true
			ReportArtifact("Philosophers Stone")
		elseif ToCheck.BrickColor == BrickColor.new("Black") then
			Trinket = "Artifact [Night Stone]"
			Color = Color3.new(0.333333, 0.333333, 1)
			Found = true
			ReportArtifact("Night Stone")

		elseif ToCheck.BrickColor == BrickColor.new("Pastel Blue")	 then
			Trinket = "Artifact [Fairfrozen]"
			Color = Color3.new(0.666667, 1, 1)
			Found = true
			ReportArtifact("Fairfrozen")

		elseif ToCheck.BrickColor == BrickColor.new("New Yeller") and ToCheck:FindFirstChild("OrbParticle") then
			Trinket = "Artifact [Spider Cloak]"
			Color = Color3.new(1, 1, 0)
			Found = true
			ReportArtifact("Spider Cloak")
		end

	elseif ToCheck.Material == Enum.Material.Glass and ToCheck.BrickColor == BrickColor.new("Hot pink") then
		Trinket = "Artifact [Rift Gem]"
		Color = Color3.new(1, 0.333333, 1)
		Found = true
		ReportArtifact("Rift Gem")
	end
	if ToCheck:FindFirstChild("Mesh") and not Found == true then
		if ToCheck.Mesh.MeshId == "rbxassetid://%2013116112%20" then
			Trinket = "Goblet"
			Color = Color3.new(0.517647, 0.345098, 0)
		end
		if ToCheck.Material == Enum.Material.Glass and ToCheck.Reflectance == 0.5 and ToCheck.Size == Vector3.new(0.4, 0.5, 0.3) then
			Trinket = "Opal"
			Color = Color3.new(1, 1, 1)
		elseif ToCheck.Mesh.MeshId == "rbxassetid://%202877143560%20" then
			if ToCheck.BrickColor == BrickColor.new("Cadet blue") then
				Trinket = "Diamond"
				Color = Color3.new(0.482353, 0.72549, 0.72549)
			elseif ToCheck.BrickColor == BrickColor.new("Forest green") then
				Trinket = "Emerald"
				Color = Color3.new(0.333333, 1, 0.498039)
			elseif ToCheck.BrickColor == BrickColor.new("Lapis") then
				Trinket = "Sapphire"
				Color = Color3.new(0, 0, 0.588235)
			end
		elseif ToCheck:FindFirstChild("OrbParticle") then
			if ToCheck:FindFirstChild("OrbParticle").LightEmission == 0.9 then
				Trinket = "Artifact [Ice Essence]"
				Color = Color3.new(0.333333, 1, 1)
			else
				Trinket = "???"
				Color = Color3.new(0.666667, 0.333333, 1)
			end
		end
	else
		if not  Found == true then
			print(ToCheck.Name)
			Found = true
			if ToCheck.MeshId == "rbxassetid://5204453430" then
				Trinket = "Scroll"
				Color = Color3.new(1, 0.666667, 0)
			elseif ToCheck.MeshId == "rbxassetid://%202877143560%20" then
				Trinket = "Ruby"
				Color = Color3.new(1, 0, 0)

			elseif ToCheck.MeshId == "rbxassetid://5196577540" then
				Trinket = "Old Amulet"
				Color = Color3.new(0.219608, 0.141176, 0)
			elseif ToCheck.MeshId == "rbxassetid://5196551436" then
				Trinket = "Amulet"
				Color = Color3.new(0.670588, 0.670588, 0.670588)
			elseif ToCheck.MeshId == "rbxassetid://5196782997" then
				Trinket = "Old Ring"
				Color = Color3.new(0.670588, 0.670588, 0.670588)
			elseif ToCheck.MeshId == "rbxassetid://5196776695" then
				Trinket = "Ring"
				Color = Color3.new(0.670588, 0.670588, 0.670588)
			elseif ToCheck.MeshId == "rbxassetid://923469333" then
				Trinket = "Candy"
				Color = Color3.new(1, 0.666667, 1)
			end
		end
	end
	return Trinket,Color
end
function AddEsp(Type,Target)
	task.spawn(function()
		task.wait()
		if Type == "Player" then
			if Target:FindFirstChild("Humanoid") then
				local Part = Instance.new("Part",workspace)
				Part.Name = "数数"
				Part.Anchored = true
				Part.CanCollide = false
				Part.Transparency = 1
				local Billboard = Instance.new("BillboardGui",Part)
				Billboard.AlwaysOnTop = true
				Billboard.Size = UDim2.new(0, 200,0, 50)
				Billboard.Adornee = Part
				local Frame = Instance.new("Frame",Billboard)
				Frame.BackgroundTransparency = 1
				Frame.Size = UDim2.new(0, 100,0, 100)
				local PlayerText = Instance.new("TextLabel",Frame)
				PlayerText.Size = UDim2.new(0, 200,0, 50)
				PlayerText.TextColor = BrickColor.new("Silver")
				PlayerText.TextScaled = true
				PlayerText.TextWrapped = true
				PlayerText.BackgroundTransparency = 1
				PlayerText.Position = UDim2.new(0, 0,0, 0)
				PlayerText.TextColor3 = Color3.new(0, 0, 1)
				PlayerText.Font = Enum.Font[Exploit._Font]
				PlayerText.Text = game.Players[Target.Name].leaderstats.Lord.Value.." "..game.Players[Target.Name].leaderstats.FirstName.Value.." "..game.Players[Target.Name].leaderstats.LastName.Value.."["..Target.Name.."]"
				local DistanceText = Instance.new("TextLabel",Frame)
				DistanceText.Font = Enum.Font[Exploit._Font]
				DistanceText.Text = "[0]"
				DistanceText.Size = UDim2.new(0, 200,0, 50)
				DistanceText.Position = UDim2.new(0, 0,0, 30)
				DistanceText.TextScaled = true
				DistanceText.BackgroundTransparency = 1
				DistanceText.TextWrapped = true
				DistanceText.TextColor = BrickColor.White()
				local GridLayout = Instance.new("UIGridLayout",Frame)
				GridLayout.CellSize = UDim2.new(0, 250,0, 20)
				GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
				task.spawn(function()
					while Target do
						task.wait()
						DistanceText.Text = "["..UpdateDistance(Target.HumanoidRootPart).."]"
						PlayerText = game.Players[Target.Name].leaderstats.Lord.Value.." "..game.Players[Target.Name].leaderstats.FirstName.Value.." "..game.Players[Target.Name].leaderstats.LastName.Value.." ["..Target.Name.."] "
						Part.CFrame = Target.HumanoidRootPart.CFrame
					end
				end)
				workspace.Live.ChildRemoved:Connect(function(f)
					if f == Target then
						Part:Destroy()
					end
				end)	
			end		 
		elseif Type == "Mob" then
			
		elseif Type == "Trinket" then
			if Target:FindFirstChild("ClickPart") then
				local TrinketType,TrinketColor = CheckWhatTrinket(Target)	
				local Part = Instance.new("Part",workspace)
				Part.Name = "数"
				Part.Anchored = true
				Part.CanCollide = false
				Part.CFrame = Target.CFrame + Vector3.new(0,2,0)
				Part.Transparency = 1
				local Billboard = Instance.new("BillboardGui",Part)
				Billboard.AlwaysOnTop = true
				Billboard.Size = UDim2.new(0, 200,0, 50)
				Billboard.Adornee = Part
				local Frame = Instance.new("Frame",Billboard)
				Frame.BackgroundTransparency = 1
				Frame.Size = UDim2.new(0, 100,0, 100)
				local TrinketText = Instance.new("TextLabel",Frame)
				TrinketText.Size = UDim2.new(0, 200,0, 50)
				if  TrinketType == nil then
					TrinketText.Text = "--[[Unkown Trinket]]--"
				else
					TrinketText.Text = TrinketType
					print("Found Trinket Type")
				end
				TrinketText.TextScaled = true
				TrinketText.TextWrapped = true
				TrinketText.BackgroundTransparency = 1
				TrinketText.Position = UDim2.new(0, 0,0, 0)
				TrinketText.TextColor3 = Color3.new(0.333333, 1, 0)
				TrinketText.Font = Enum.Font[Exploit._Font]
				local DistanceText = Instance.new("TextLabel",Frame)
				DistanceText.Font = Enum.Font[Exploit._Font]
				DistanceText.Text = "[0]"
				DistanceText.Size = UDim2.new(0, 200,0, 50)
				DistanceText.Position = UDim2.new(0, 0,0, 30)
				DistanceText.TextScaled = true
				DistanceText.BackgroundTransparency = 1
				DistanceText.TextWrapped = true
				DistanceText.TextColor = BrickColor.White()
				local GridLayout = Instance.new("UIGridLayout",Frame)
				GridLayout.CellSize = UDim2.new(0, 250,0, 20)
				GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
				if TrinketColor == nil then
					TrinketText.TextColor3 = Color3.new(0.333333, 1, 0)
				else
					TrinketText.TextColor3 = TrinketColor
				end
				task.spawn(function()
					while Target do
						task.wait()
						DistanceText.Text = "["..UpdateDistance(Part).."]"
					end
				end)
				workspace.Trinkets.ChildRemoved:Connect(function(f)
					if f == Target then
						Part:Destroy()
					end
				end)
			end
		end
	end)
end
function CreateHub(Name,UI)
	task.spawn(function()
		task.wait()	
		local HUBFrame = Instance.new("Frame",UI)
		local Text = Instance.new("TextLabel",HUBFrame)
		Text.Name = "Label"
		Text.TextColor3 = Color3.new(1, 1, 1)
		Text.Font = Enum.Font[Exploit._Font]
		Text.Text = Name
		Text.BackgroundTransparency = 1
		Text.TextWrapped = true
		Text.TextScaled = true
		HUBFrame.Name = Name
		local GridLayout = Instance.new("UIGridLayout",HUBFrame)
		GridLayout.CellSize = UDim2.new(0, 250,0, 20)
		GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
		local UICorner = Instance.new("UICorner",HUBFrame)
		UICorner.CornerRadius = UDim.new(0, 8)
		HUBFrame.BorderSizePixel = 0
		for _,v in pairs(HUBFrame:GetChildren()) do
			if v:IsA("TextButton") then
			end
		end
	end)
end
function EspCheck(Type)
	if Type == "Trinket" then
		for _,v in pairs(workspace.Trinkets:GetChildren()) do
			AddEsp("Trinket",v)
		end
	elseif Type == "Player" then
		for _,v in pairs(workspace.Live:GetChildren()) do
			if not v:FindFirstChild("MonsterInfo")  then
				AddEsp("Player",v)
				end
		end
	end
end
function ItemDropped(ItemName,ToolBag)
	local NotificationInfo = {Title= "Item Dropped",Text= "A "..ItemName.." Has been dropped.",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
	if Exploit.AutoBagPickup == true then
		while ToolBag do
			task.wait()
			ToolBag.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		end
	end
end
function PickUpBags()
	if Exploit.AutoBagPickup == true then
		for _,v in pairs(workspace:WaitForChild("Thrown"):GetChildren()) do
			if v.Name == "ToolBag" then
				ItemDropped(v:FindFirstChild("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text,v)
			end
		end
	end
end
workspace.Trinkets.ChildAdded:Connect(function(z)
	if Exploit.TrinketESP == true then
		AddEsp("Trinket",z)
	end
end)
workspace.Live.ChildAdded:Connect(function(z)
	if Exploit.PlayerESP == true then
		AddEsp("Player",z)
	end
end)
function CreateAction(Parent,Name,Type,Gui)
	task.spawn(function()
		repeat task.wait(.25) until Gui:FindFirstChild("Frame")[Parent]:FindFirstChild("Label")
		task.wait()
		local Button = Instance.new("TextButton",Gui:FindFirstChild("Frame")[Parent])
		Button.Text = Name
		Button.Name = Name
		Button.BackgroundTransparency = 1
		Button.Font = Enum.Font[Exploit._Font]
		Button.TextWrapped = true
		Button.TextScaled = true
		if Button.Name == "Toggle No Fall" then 
			if Exploit.NoFallDamage == false then
				Button.Text = "Toggle No Fall [Off]"
			elseif Exploit.NoFallDamage == true then
				Button.Text = "Toggle No Fall [On]"
			end
		end
		if Button.Name == "Toggle Auto Pickup"	then
			if Exploit.AutoBagPickup == false then
				Button.Text = "Toggle AutoBagPickup [Off]"
			elseif Exploit.AutoBagPickup == true then
				Button.Text = "Toggle AutoBagPickup [On]"
				PickUpBags()
			end	
		end
		if Button.Name == "Trinket ESP"	then
			if Exploit.TrinketESP == false then
				Button.Text = "Toggle Trinket ESP [Off]"
				for _,v in pairs(workspace:GetChildren()) do
					if v.Name == "数" and v:FindFirstChild("BillboardGui") then
						v:Destroy()
					end
				end
			elseif Exploit.TrinketESP == true then
				Button.Text = "Toggle Trinket ESP [On]"
				EspCheck("Trinket")
			end	
		end
		if Button.Name == "Player ESP"	then
			if Exploit.PlayerESP == false then
				Button.Text = "Toggle Player ESP [Off]"
				for _,v in pairs(workspace:GetChildren()) do
					if v.Name == "数数" and v:FindFirstChild("BillboardGui") then
						v:Destroy()
					end
				end
			elseif Exploit.PlayerESP == true then
				Button.Text = "Toggle Player ESP [On]"
				EspCheck("Player")
			end	
		end
		Button.MouseButton1Down:Connect(function()
			if Button.Name == "Toggle No Fall" then 
				if Exploit.NoFallDamage == false then
					Exploit.NoFallDamage = true
					Button.Text = "Toggle No Fall [ON]"
					Exploiter.Character:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").ApplyFallDamage.Name = "Ban"
				elseif Exploit.NoFallDamage == true then
					Exploit.NoFallDamage = false
					Button.Text = "Toggle No Fall [Off]"
					Exploiter.Character:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").Ban.Name = "ApplyFallDamage"
				end
			elseif Button.Name == "Respawn" then
				game.Players.LocalPlayer.Character.Humanoid.Health = 0
			elseif Button.Name == "Player ESP" then
				if Exploit.PlayerESP == false then
					Button.Text = "Toggle Player ESP  [On]"
					Exploit.PlayerESP = true
					EspCheck("Player")
				elseif Exploit.PlayerESP == true then
					Button.Text = "Toggle Player ESP  [Off]"
					Exploit.PlayerESP = false
					for _,v in pairs(workspace:GetChildren()) do
						if v.Name == "数数" and v:FindFirstChild("BillboardGui") then
							v:Destroy()
						end
					end
				end	
			elseif Button.Name == "Trinket ESP"	then
				if Exploit.TrinketESP == false then
					Button.Text = "Toggle Trinket ESP [On]"
					Exploit.TrinketESP = true
					EspCheck("Trinket")
				elseif Exploit.TrinketESP == true then
					Button.Text = "Toggle Trinket ESP [Off]"
					Exploit.TrinketESP = false
					for _,v in pairs(workspace:GetChildren()) do
						if v.Name == "数" and v:FindFirstChild("BillboardGui") then
							v:Destroy()
						end
					end
				end	

			elseif Button.Name == "Toggle Auto Pickup"	then
				if Exploit.AutoBagPickup == false then
					Button.Text = "Toggle AutoBagPickup [On]"
					Exploit.AutoBagPickup = true
					PickUpBags()
				elseif Exploit.AutoBagPickup == true then
					Button.Text = "Toggle AutoBagPickup [Off]"
					Exploit.AutoBagPickup = false
				end					
			elseif Button.Name == "Skycastle Throne Teleport" then
				SkycastleTP()
			end 

		end)
		Button.MouseEnter:Connect(function()
			TweenService:Create(Button,TweenInfo.new(0.5),{
				TextColor3 = Color3.new(0.666667, 0, 0)
			}):Play()
		end)
		Button.MouseLeave:Connect(function()
			TweenService:Create(Button,TweenInfo.new(0.5),{
				TextColor3 = Color3.new(0, 0, 0)
			}):Play()
		end)
	end)
end

function CheckWhatGame()
	local _game = nil
	local ID = game.PlaceId
	if ID == Games.Sanctum.ID then
		_game = "Sanctum"
	elseif ID == Games.NotRogueLineage.ID then
		_game = "NotRogueLineage"
	else
		_game = "Non Supported Game"
	end
	return _game
end

function SkycastleTP()
	local Player = game:GetService("Players").LocalPlayer
	Player.Character.HumanoidRootPart.CFrame = CFrame.new(1324.71094, 3807.68994, 6199.8418)
end
function AttachToBack(Target,Exploiter)

end
Exploiter = game.Players.LocalPlayer
ExploitersCharacter = Exploiter.Character
ExploiterMouse = Exploiter:GetMouse()
function StartExploit()
	Games._CurrentGame = CheckWhatGame()
	if not Games._CurrentGame == "NotRogueLineage" then
		Exploiter:Kick("Game not supported, only game supported is Not Rogue Lineage")
	end
	local ScreenGui  = Instance.new("ScreenGui")
	ScreenGui.Name = "GalaxyExploit2"
	local Frame = Instance.new("Frame",ScreenGui)
	ScreenGui.Parent = Exploiter.PlayerGui
	Frame.Position = UDim2.new(0.431, 0,0.029, 0)
	Frame.Size = UDim2.new(0, 300,0, 100)
	Frame.BackgroundColor = BrickColor.Black()
	local GalaxySploitLabel = Instance.new("TextLabel",Frame)
	GalaxySploitLabel.TextWrapped = true
	GalaxySploitLabel.TextScaled = true
	GalaxySploitLabel.BackgroundTransparency = 1
	GalaxySploitLabel.Text = "Galaxy Hub Loaded For : "..CheckWhatGame()
	GalaxySploitLabel.TextColor = BrickColor.White()
	GalaxySploitLabel.Size = UDim2.new(0, 200,0, 32)
	GalaxySploitLabel.Font = Enum.Font[Exploit._Font]
	local DownTween = TweenService:Create(Frame,TweenInfo.new(1),{
		Position = UDim2.new(0.431, 0,0.445, 0)
	})
	DownTween:Play()
	DownTween.Completed:Connect(function()
		TweenService:Create(GalaxySploitLabel,TweenInfo.new(1),{
			TextTransparency = 1
		}):Play()
		TweenService:Create(Frame,TweenInfo.new(1),{
			BackgroundTransparency = 1
		}):Play()
		Debris:AddItem(ScreenGui,2)
	end)
	task.wait(1.5)
	local MainUI = Instance.new("ScreenGui",Exploiter.PlayerGui)
	MainUI.Name = "Main"
	local MainUIFrame = Instance.new("Frame",MainUI)
	MainUIFrame.Size = UDim2.new(0, 1744,0, 557)
	MainUIFrame.Position = UDim2.new(0.078, 0,0.017, 0)
	MainUIFrame.BackgroundTransparency = 1
	local GridLayout = Instance.new("UIGridLayout",MainUIFrame)
	GridLayout.CellSize = UDim2.new(0, 250,0, 400)
	GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
	CreateHub("Main",MainUIFrame)
	CreateHub("Visuals",MainUIFrame)
	CreateHub("Combat",MainUIFrame)
	CreateHub("Movement",MainUIFrame)
	CreateHub("Keybinds",MainUIFrame)
	CreateHub("GUI Settings",MainUIFrame)
	CreateAction("Main","Skycastle Throne Teleport","Instant",MainUI)
	CreateAction("Combat","Toggle No Fall","Instant",MainUI)
	CreateAction("Combat","Respawn","Instant",MainUI)
	CreateAction("Main","Toggle Auto Pickup","Instant",MainUI)
	CreateAction("Visuals","Trinket ESP","Instant",MainUI)
	CreateAction("Visuals","Player ESP","Instant",MainUI)
	CreateAction("Keybinds","P To Toggle Gui","Instant",MainUI)
	UserInputService.InputBegan:Connect(function(Input,IsTyping)
		if IsTyping then
			warn("Typing")
			return 
		end
		if Input.KeyCode == Enum.KeyCode.P then
			if MainUI.Enabled == true then
				MainUI.Enabled = false
			else
				MainUI.Enabled = true
			end
		end
	end)
	workspace:WaitForChild("Thrown").ChildAdded:Connect(function(v)
		if v.Name == "ToolBag" then
			task.wait()
			ItemDropped(v:FindFirstChild("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text,v)
		end
	end)
end
--Rest of code
StartExploit()
send("Hub was executed ["..Exploiter.Name..","..Exploiter.UserId.."]")
workspace.Live.ChildAdded:Connect(function(v)
	if v.Name == Exploiter.Name then
		for _,v in pairs(workspace:GetChildren()) do
			if v.Name == "数" and v:FindFirstChild("BillboardGui") then
				v:Destroy()
			end
		end
		task.wait()
		StartExploit()
	end
end)
Players.ChildAdded:Connect(function(AddedPlayer)
	if CheckIfMod(AddedPlayer) == true then
		ImportantInServer("Moderator", AddedPlayer)
	end
	if CheckIfIllusionist(AddedPlayer) == true then
		ImportantInServer("Illusionist",AddedPlayer)
	end
end)
Players.ChildRemoved:Connect(function(RemovedPlayer)
	if CheckIfMod(RemovedPlayer) == true then
		ImportantLeft("Moderator",RemovedPlayer)
	end
	if CheckIfIllusionist(RemovedPlayer) == true then
		ImportantLeft("Illusionist",RemovedPlayer)
	end
end)
task.wait(1)
CheckForMods()
CheckForIllus()
