----- Game Services
Debris = game:GetService("Debris")
Players = game:GetService("Players")
CoreGui = game:GetService("CoreGui")
TweenService = game:GetService("TweenService")
UserInputService = game:GetService("UserInputService")
HttpService = game:GetService("HttpService")



------ Modules 
local Games = {
	_CurrentGame = nil;
	Sanctum = {
		ID = 9212655914;
		Moderators = {2817760,81919939}
	};
	NotRogueLineage = {
		ID = 9149676498;
		Moderators = {1935133078,466077984,668057530,56806120,2493139163,123952577,1448136433,142926242}
	};
}
local Exploit = {
	
	Settings = {
		AttachingToBack = false;
		Teleporting = false;
		NoFallDamage = false;
		AutoBagPickup = false;
		_Font = "Bodoni";
		TrinketESP = false;
		PlayerESP = false;
		ConsLabAutoFarm = false;
		GuiOpen = true;
		SpearDash = false;
	};	Colors = {
		Trinkets = {
			["Azael Horns"] = Color3.new(1, 0, 0),
			["Lannis Amulet"] = Color3.new(0.666667, 0.333333, 1),
			["Rift Gem"] = Color3.new(1, 0, 1),
			["Amulet of the White King"] = Color3.new(0.901961, 0.901961, 0.447059),
			["Phoenix Down"] = Color3.new(1, 0.666667, 0),
			["Philosophers Stone"] = Color3.new(1, 0.333333, 0.498039),
			["Ice Essence"] = Color3.new(0.666667, 1, 1),
			["Spider Cloak"] = Color3.new(1, 1, 0),
			["Idol of the Forgotten"] = Color3.new(0.694118, 0.694118, 0.694118),
			["???"] = Color3.new(0.666667, 0.333333, 1),
			["Old Ring"] = Color3.new(0.666667, 0.666667, 0.498039),
			["Old Amulet"] = Color3.new(0.666667, 0.666667, 0.498039),
			["Night Stone"] = Color3.new(0.666667, 0.666667, 1),
			Fairfrozen = Color3.new(0, 1, 1),
			Ring = Color3.new(0.694118, 0.694118, 0.694118),
			Amulet = Color3.new(0.694118, 0.694118, 0.694118),
			Opal = Color3.new(0.886275, 0.886275, 0.886275),
			Sapphire = Color3.new(0, 0.333333, 1),
			Emerald = Color3.new(0, 1, 0),
			Diamond = Color3.new(0.533333, 0.8, 0.8),
			Goblet = Color3.new(0.65098, 0.435294, 0),
			Scroll = Color3.new(1, 0.666667, 0),
			Candy = Color3.new(0.666667, 1, 0.498039),
			Ruby = Color3.new(1, 0, 0)
		}

	};
	AutoFarmPoints = {
		["Tundra 2"] = {
			3982.49805, 553.293762, -498.717529,
			4013.74536, 553.293762, -546.454773,
			3889.92603, 553.293884, -545.354309,
			3918.22534, 553.293762, -498.919891,
			3918.46216, 553.293762, -451.310699,
			3979.88135, 553.293762, -383.164124,
			3980.12158, 553.293823, -334.594086,
			3913.94897, 553.293823, -334.159851,
			4010.87622, 553.293762, -401.340454,
			3921.28, 553.294, -413.868,
			4018.15088, 439.293854, -1015.15369,
			4007.42285, 439.293854, -1014.5849,
			3999.70337, 439.293854, -1013.95752,
			3976.95117, 439.293854, -1013.47498,
		
			
		}
	},
	Classes = {
	Warrior = {
		skills = {
			"Action Surge",
			"LordsTraining",
			"MercenaryCarry",
		},
		price = 35,
	},
	Samurai = {
		skills = {
			"Triple Slash",
			"Blade Flash",
			"Flowing Counter",
			"BuyKatana",
		},
		price = 125,
		requiredclass = "",
		class = "Samurai",
	},
	Ronin = {
		skills = {
			"Sheathe Mastery",
			"Calm Mind",
			"Samurai",
		},
		price = 250,
		requiredclass = "Samurai",
		class = "Ronin",
		isultra = true,
	},
	Spear = {
		skills = {
			"SpearDash",
			"Triple Strike",
			"Serpent Strike",
		},
		price = 35,
	},
	DragonKnight = {
		skills = {
			"Spear Crusher",
			"Dragon Roar",
			"Dragon Blood",
		},
		price = 100,
		requiredclass = "",
		class = "Dragon Knight",
		ultra = "Dragon Slayer",
	},
	DragonSlayer = {
		skills = {
			"Wing Soar",
			"Thunder Spear Crash",
			"DragonBloodUpgrade"
		},
		price = 350,
		requiredclass = "Dragon Knight",
		class = "Dragon Slayer",
		isultra = true,
	},
	ChurchKnight = {
		skills = {
			"Church Knight Helmet",
			--"Chain Pull",
			"Light Piercer",
			"Impale",
		},
		price = 150,
		requiredclass = "",
		class = "ChurchKnight",
	},
	DeepKnight = {
		skills = {
			"Deep Knight Helmet",
			"Chain Pull",
			"Deep Sacrifice",
			"Leviathan Plunge",
		},
		price = 350,
		requiredclass = "ChurchKnight",
		class = "DeepKnight",
		isultra = true,
	},
	SigilKnight = {
		skills = {
			"Ice Charge",
			"Thunder Charge",
			"Flame Charge",
		},
		price = 65,
		requiredclass = "",
		class = "SigilKnight",
		ultra = "SigilKnightCommander",
	},
	DarkSigilKnight = {
		skills = {
			"WraithTraining",
			"MasteredRune",
			"ChargeMastery",
			"Dark Flame Burst",
			"Dark Eruption",
			"Dark Sigil Helmet",
		},
		price = 350,
		requiredclass = "SigilKnight",
		class = "DarkSigilKnight",
		isultra = true,
		firstskill = "WraithTraining",
	},
	SigilKnightCommander = {
		skills = {
			"Charged Blow",
			"Hyper Body",
			"ChargeMastery",
		},
		price = 350,
		requiredclass = "SigilKnight",
		class = "SigilKnightCommander",
		isultra = true,
	},
	Monk = {
		skills = {
			"ChiBlock",
			"HolyFire",
			"IronBody",
			"TrainedCombat",
		},
		price = 40,
		requiredclass = "",
		class = "Monk",
	},
	DragonSage = {
		skills = {
			"Lightning Elbow",
			"Lightning Drop",
			"DragonDash",
		},
		price = 350,
		requiredclass = "Monk",
		class = "DragonSage",
		isultra = true,
	},
	Akuma = {
		skills = {
			"Goshoryu",
			"Leg Breaker",
			"Spin Kick",
			"TrainedCombat",
		},
		price = 60,
		requiredclass = "",
		class = "Akuma",
		ultra = "Oni",
	},
	Oni = {
		skills = {
			"Demon Step",
			"Demon Flip",
			"Axe Kick",
			"Misogi",
		},
		price = 350,
		requiredclass = "Akuma",
		class = "Oni",
		isultra = true,
	},
	Botanist = {
		skills = {
			"Life Sense",
			"Verdien",
		},
		price = 60,
		requiredclass = "",
		class = "Botanist",
		ultra = "Florist",
	},
	Florist = {
		skills = {
			"Floresco",
			"Nature Mastery",
			"ObserveBlock",
			"Perflora",
		},
		price = 350,
		requiredclass = "Botanist",
		class = "Florist",
		isultra = true,
	},
	Thief = {
		skills = {"Agility","Dagger Throw"},
		price = 45,
	},
	Spy = {
		skills = {
			"Silverguard",
			"FeatherFall",
		},
		price = 60,
		requiredclass = "",
		class = "Spy",
		ultra = "Whisper",
	},
	Whisper = {
		skills = {
			"Needle's Eye",
			"Elegant Slash",
			"Acrobat",
		},
		price = 350,
		requiredclass = "Spy",
		class = "Whisper",
		isultra = true,
	},
	Assassin = {
		skills = {"Bane","UpgradedAgility","Dagger Throw","Lethality","Triple Dagger Throw"},
		price = 45,
		class = "Assassin",
		requiredclass = "",
		ultra = "Faceless",
	},
	Faceless = {
		skills = {
			"UpgradedBane",
			"Shadow Fan",
			"Chain Lethality",
			"Ethereal Strike",
			"ShadowDash"
		},
		price = 350,
		requiredclass = "Assassin",
		class = "Faceless",
		isultra = true,
	},
	Shinobi = {
		skills = {
			"Grapple",
			"Owl Slash",
			"Shadowrush",
			"FeatherFall",
			"ShadowrushAerial",
		},
		price = 350,
		requiredclass = "Assassin",
		class = "Shinobi",
		isultra = true,
		},
		}
}

------ Functions
function CheckClassOfPlayer(Player)
	local Backpack = Player:WaitForChild("Backpack")
	local FoundClass = false
	local Class = nil
	local TableOne = {}
	for _,v in pairs(Backpack:GetChildren()) do
		if v:FindFindFirstChild("Skill") then
			for _,ClassCheck in pairs(Exploit.Classes) do
				if ClassCheck:FindFirstChild(v) then
					for _,MaybeFound in pairs(ClassCheck) do
						for _,T in pairs(MaybeFound) do
							for _,l in pairs(Backpack:GetChildren()) do
								if l.Name == MaybeFound.Name then
									table.insert(TableOne,l.Name)
									FoundClass = true
								end
							end
						end
					end
				end
			end
		end
	end
end
function AutoFarm(Place)
    if Place == "Tundra 2" then
		task.spawn(function()
			
		end)
		game.Players.LocalPlayer.Character.Humanoid.Health = 0
			task.wait(6.3)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3982.49805, 553.293762, -498.717529)
			task.wait(1.5)
			TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
				CFrame = CFrame.new(4013.74536, 553.293762, -546.454773)
			}):Play()
			task.wait(1.5)
			TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
				CFrame = CFrame.new(3889.92603, 553.293884, -545.354309)
			}):Play()
			task.wait(1.5)
			TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
				CFrame = CFrame.new(3918.22534, 553.293762, -498.919891)
			}):Play()
			task.wait(1.5)
			TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
				CFrame = CFrame.new(3918.46216, 553.293762, -451.310699)
			}):Play()
			task.wait(1.5)
			TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
				CFrame = CFrame.new(3979.88135, 553.293762, -383.164124)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(3980.12158, 553.293823, -334.594086)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(3913.94897, 553.293823, -334.159851)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(4010.87622, 553.293762, -401.340454)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(3921.28, 553.294, -413.868)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(4018.15088, 439.293854, -1015.15369)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(4007.42285, 439.293854, -1014.5849)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(3999.70337, 439.293854, -1013.95752)
		}):Play()
		task.wait(1.5)
		TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(1),{
			CFrame = CFrame.new(3976.95117, 439.293854, -1013.47498)
		}):Play()
		end
end
function _gettrinketcolor(Trinket)
	local Color = nil
	Color = Exploit.Colors.Trinkets[Trinket]
	return Color
end
function _getdata(toget)
	local leaderstats = toget:WaitForChild("leaderstats")
	local _FirstName = leaderstats:WaitForChild("FirstName").Value
	local _LastName = leaderstats:WaitForChild("LastName").Value
	return _FirstName,_LastName
end
function UpdateDistance(Target)
	local Distance = Target.Position - game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position
	local Found = math.floor(Distance.Magnitude)
	return Found
end
function GetArea(target)
	
end
function send(Type,Content)
	if Type == "Data" then
		local webhook = 'https://discord.com/api/webhooks/968122076953182248/IdrXyRTwwnDReaYc5VlKLdLWWmufpc4OmpluXzOySzdHvIvJdSQUL4w1iX-TRQNbA3sy'
		local W = {
			['username'] = "--[[Galaxy Hub]]",
			['embeds'] = {{
				['description'] = "["..game.Players.LocalPlayer.Name.." : "..game.Players.LocalPlayer.UserId.."]".." ["..Games._CurrentGame.."] ",
				['title'] = "Hub Was Executed [Click For Profile]",
				['url'] = "https://www.roblox.com/users/"..game.Players.LocalPlayer.UserId.."/profile",

			}}
		}
		syn.request({Url = webhook, Method = 'POST', Body = game:GetService('HttpService'):JSONEncode(W), Headers = {['content-type'] = 'application/json'}});
	else
		local webhook = 'https://discord.com/api/webhooks/968122076953182248/IdrXyRTwwnDReaYc5VlKLdLWWmufpc4OmpluXzOySzdHvIvJdSQUL4w1iX-TRQNbA3sy'
		local W = {
			['username'] = "--[[Galaxy Hub]]",
			['embeds'] = {{
				['description'] = "["..game.Players.LocalPlayer.Name.." : "..game.Players.LocalPlayer.UserId.."]"..Content,
				['title'] = "Hub Was Executed [Click For Profile]",

			}}
		}
		syn.request({Url = webhook, Method = 'POST', Body = game:GetService('HttpService'):JSONEncode(W), Headers = {['content-type'] = 'application/json'}});
	end
	
end
function DoFont(Target)
	Target.Font = Enum.Font[Exploit.Settings._Font]
	if not Target.TextColor3 == Color3.new(0, 0, 0) then
		Target.TextStrokeTransparency = 0
	end
end

function Alert(ToAlert)
	if ToAlert == "Moderator" or ToAlert == "Illusionist" then
		local Sound = Instance.new("Sound",game:GetService("CoreGui"))
		Sound.SoundId = "rbxassetid://1693890393"
		Sound:Play()
		Sound.Volume = 0.5
		Debris:AddItem(Sound,2)
	end
end
function CheckIfMod(PlayerToCheck)
	if table.find(Games[Games._CurrentGame].Moderators,PlayerToCheck.UserId) then
		return true
	else
		return false
	end
end
function CheckIfIllusionist(PlayerToCheck)
	if PlayerToCheck:WaitForChild("Backpack"):FindFirstChild("Observe") or workspace.Live:FindFirstChild(PlayerToCheck.Name):FindFirstChild("Observe") then
		return true
	else
		return false
	end
end

function ImportantLeft(Type,Victim)
	Alert(Type)
	local NotificationInfo = {Title= Type..": "..Victim.Name,Text= Type.." Left the server",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end
function ImportantInServer(Type,Victim)
	Alert(Type)
	local NotificationInfo = {Title= Type..": "..Victim.Name,Text= Type.." In The Server be careful",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end

function CheckForMods()
	for _,v in pairs(Players:GetChildren()) do
		if CheckIfMod(v) == true then
			ImportantInServer("Moderator",v)
		end
	end
end
function CheckForIllus()
	for _,v in pairs(Players:GetChildren()) do
		if CheckIfIllusionist(v) == true then
			ImportantInServer("Illusionist",v)
		end
	end
end
function ReportArtifact(Artifact,Place)
	local Sound = Instance.new("Sound",game:GetService("CoreGui"))
	Sound.SoundId = "rbxassetid://3398620867"
	Sound:Play()
	Debris:AddItem(Sound,2)
	local NotificationInfo = {Title="Artifact In Game",Text=Artifact.."["..Place.."]",Duration=5,Button1 = "Okay"} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end
function CheckWhatTrinket(ToCheck)
	task.wait()
	local TrinketModule = {
		TrinketType = nil,
		TrinketColor = nil,
		IsArtifact = nil,
		AlreadyFound = false
	}
	local function AddTrinketValues(One,Two,Three,Four)
		TrinketModule.TrinketType = One
		TrinketModule.TrinketColor = Two
		TrinketModule.IsArtifact = Three
		TrinketModule.AlreadyFound = Four
	end
	if ToCheck.BrickColor == BrickColor.new("Medium Medium stone grey") and ToCheck:FindFirstChild("Attachment") then
		AddTrinketValues("Phoenix Down",_gettrinketcolor("Phoenix Down"),false,true)
	end
	if ToCheck.BrickColor == BrickColor.new("Daisy orange") and ToCheck.Material == Enum.Material.DiamondPlate then
		AddTrinketValues("Scroom Key",_gettrinketcolor("Scroom Key"),false,true)
	end
	if ToCheck.Material == Enum.Material.Slate and ToCheck.BrickColor == BrickColor.new("Dark grey") then
		AddTrinketValues("Idol of the Forgotten",_gettrinketcolor("Idol of the Forgotten"),false,true)
	end
	if ToCheck.Material == Enum.Material.Neon and ToCheck.BrickColor == BrickColor.new("Persimmon") and ToCheck:FindFirstChild("OrbParticle") then
		AddTrinketValues("Ice Essence",_gettrinketcolor("Ice Essence"),false,true)
	end
	if ToCheck.Material == Enum.Material.Neon then
		if ToCheck.BrickColor == BrickColor.new("Institutional white") then
			if ToCheck:FindFirstChild("PointLight") then
				AddTrinketValues("Amulet of the White King",_gettrinketcolor("Amulet of the White King"),true,true)
			else	
				AddTrinketValues("Lannis Amulet",_gettrinketcolor("Lannis Amulet"),true,true)
			end
		elseif ToCheck.BrickColor == BrickColor.new("Persimmon") and not ToCheck:FindFirstChild("OrbParticle") then
			AddTrinketValues("Philosophers Stone",_gettrinketcolor("Philosophers Stone"),true,true)
		elseif ToCheck.BrickColor == BrickColor.new("Black") then
			AddTrinketValues("Night Stone",_gettrinketcolor("Night Stone"),true,true)
		elseif ToCheck.BrickColor == BrickColor.new("Pastel Blue")	 then
			AddTrinketValues("Fairfrozen",_gettrinketcolor("Fairfrozen"),true,true)
		elseif ToCheck.BrickColor == BrickColor.new("New Yeller") and ToCheck:FindFirstChild("OrbParticle") then
			AddTrinketValues("Spider Cloak",_gettrinketcolor("Spider Cloak"),true,true)
		end

	elseif ToCheck.Material == Enum.Material.Glass and ToCheck.BrickColor == BrickColor.new("Hot pink") then
		AddTrinketValues("Rift Gem",_gettrinketcolor("Rift Gem"),true,true)
	end
	if ToCheck:FindFirstChild("Mesh") and not TrinketModule.AlreadyFound == true then
		if ToCheck.Mesh.MeshId == "rbxassetid://%2013116112%20" then
			AddTrinketValues("Goblet",_gettrinketcolor("Goblet"),false,true)

		end
		if ToCheck.Material == Enum.Material.Glass and ToCheck.Reflectance == 0.5 and ToCheck.Size == Vector3.new(0.4, 0.5, 0.3) then
			AddTrinketValues("Opal",_gettrinketcolor("Opal"),false,true)

		elseif ToCheck.Mesh.MeshId == "rbxassetid://%202877143560%20" then
			if ToCheck.BrickColor == BrickColor.new("Cadet blue") then
				AddTrinketValues("Diamond",_gettrinketcolor("Diamond"),false,true)
			elseif ToCheck.BrickColor == BrickColor.new("Forest green") then
				AddTrinketValues("Emerald",_gettrinketcolor("Emerald"),false,true)
			elseif ToCheck.BrickColor == BrickColor.new("Lapis") then
				AddTrinketValues("Sapphire",_gettrinketcolor("Sapphire"),false,true)

			end
		elseif ToCheck:FindFirstChild("OrbParticle") then
			if ToCheck:FindFirstChild("OrbParticle").LightEmission == 0.9 then
			else
				AddTrinketValues("???",_gettrinketcolor("???"),false,true)
			end
		end
	else
		if not TrinketModule.AlreadyFound == true then
			print(ToCheck.Name)
			TrinketModule.AlreadyFound = true
			if ToCheck.MeshId == "rbxassetid://5204453430" then
				AddTrinketValues("Scroll",_gettrinketcolor("Scroll"),false,true)
			elseif ToCheck.MeshId == "rbxassetid://%202877143560%20" then
				AddTrinketValues("Ruby",_gettrinketcolor("Ruby"),false,true)
			elseif ToCheck.MeshId == "rbxassetid://5196577540" then
				AddTrinketValues("Old Amulet",_gettrinketcolor("Old Amulet"),false,true)
			elseif ToCheck.MeshId == "rbxassetid://5196551436" then
				AddTrinketValues("Amulet",_gettrinketcolor("Amulet"),false,true)
			elseif ToCheck.MeshId == "rbxassetid://5196782997" then
				AddTrinketValues("Old Ring",_gettrinketcolor("Old Ring"),false,true)
			elseif ToCheck.MeshId == "rbxassetid://5196776695" then
				AddTrinketValues("Ring",_gettrinketcolor("Ring"),false,true)
			elseif ToCheck.MeshId == "rbxassetid://923469333" then
				AddTrinketValues("Candy",_gettrinketcolor("Candy"),false,true)

			end
		end
	end
	return TrinketModule
end
function AddEsp(Type,Target)
	task.spawn(function()
		task.wait()
		if Type == "Player"  then
			if Target:FindFirstChild("Humanoid")  then
				if game.Players[Target.Name] == game.Players.LocalPlayer.Name then
					print("[[--Self Esp Removed--]]")
					return
				end
				local Part = Instance.new("Part",workspace)
				Part.Name = "数数"
				Part.Anchored = true
				Part.CanCollide = false
				Part.Transparency = 1
				local Billboard = Instance.new("BillboardGui",Part)
				Billboard.AlwaysOnTop = true
				Billboard.Size = UDim2.new(0, 100,0, 100)
				Billboard.Adornee = Part
				local Frame = Instance.new("Frame",Billboard)
				Frame.BackgroundTransparency = 1
				Frame.Size = UDim2.new(0, 100,0, 100)
				local PlayerText = Instance.new("TextLabel",Frame)
				PlayerText.Size = UDim2.new(0, 200,0, 50)
				PlayerText.TextColor = BrickColor.new("Silver")
				PlayerText.TextScaled = true
				PlayerText.TextWrapped = true
				PlayerText.BackgroundTransparency = 1
				PlayerText.Position = UDim2.new(0, 0,0, 0)
				PlayerText.TextColor3 = Color3.new(0, 0, 1)
				PlayerText.TextStrokeTransparency = 0
				DoFont(PlayerText)
				local Health = Instance.new("TextLabel",Frame)
				DoFont(Health)
				Health.Text = "[0]"
				Health.Size = UDim2.new(0, 200,0, 50)
				Health.Position = UDim2.new(0, 0,0, 30)
				Health.TextScaled = true
				Health.BackgroundTransparency = 1
				Health.TextWrapped = true
				Health.TextColor = BrickColor.White()
				Health.TextStrokeTransparency = 0
				local DistanceText = Instance.new("TextLabel",Frame)
				DoFont(DistanceText)
				DistanceText.Text = "[0]"
				DistanceText.Size = UDim2.new(0, 200,0, 50)
				DistanceText.Position = UDim2.new(0, 0,0, 30)
				DistanceText.TextScaled = true
				DistanceText.BackgroundTransparency = 1
				DistanceText.TextWrapped = true
				DistanceText.TextColor = BrickColor.White()
				DistanceText.TextStrokeTransparency = 0
				local GridLayout = Instance.new("UIGridLayout",Frame)
				GridLayout.CellSize = UDim2.new(0, 250,0, 20)
				GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
				task.spawn(function()
					while Target do
						task.wait()
						
						local l__AreaMarkers__7 = workspace:WaitForChild("AreaMarkers")
						local v44, v45 = workspace:FindPartOnRayWithWhitelist(Ray.new(Part.Position, Vector3.new(0, 1000, 0)), { l__AreaMarkers__7 })
						local v46 = nil
						if v44 then
							v46 = v44.Name
							print(v46)
						end
						if v44 then
							DistanceText.Text = "["..UpdateDistance(Part).."]".." ["..v46.."]"
						else
							DistanceText.Text = "["..UpdateDistance(Part).."]".."[".."Unkown_Place".."]"
						end						if game.Players:FindFirstChild(Target.Name) then
							local FirstName,LastName = _getdata(game.Players[Target.Name])
							PlayerText.Text = FirstName.." "..LastName.."["..Target.Name.."]"
						else
							PlayerText.Text = "[Player Not Found]"
						end						
						Part.CFrame = Target.HumanoidRootPart.CFrame
						local FoundHealth = math.floor(Target.Humanoid.Health)
						Health.Text = "["..FoundHealth.."/"..Target.Humanoid.MaxHealth.."]"
					end
				end)
				workspace.Live.ChildRemoved:Connect(function(f)
					if f == Target then
						Part:Destroy()
					end
				end)	
				game.Players.PlayerRemoving:Connect(function(p)
					if p.Name == Target.Name then
						Part:Destroy()
					end
				end)
			end		 
		elseif Type == "Mob" then

		elseif Type == "Trinket" then
			if Target:FindFirstChild("ClickPart") then
				local TrinketModule = CheckWhatTrinket(Target)
				print("c")
				local Part = Instance.new("Part",workspace.Map)
				Part.Name = "数"
				Part.Anchored = true
				Part.CanCollide = false
				Part.CFrame = Target.CFrame + Vector3.new(0,2,0)
				Part.Transparency = 1
				local l__AreaMarkers__7 = workspace:WaitForChild("AreaMarkers")
				local v44, v45 = workspace:FindPartOnRayWithWhitelist(Ray.new(Part.Position, Vector3.new(0, 1000, 0)), { l__AreaMarkers__7 })
				local v46 = nil
				if v44 then
					v46 = v44.Name
					print(v46)
				else
					v46 = "[".."Unkown_Place".."]"
				end
				local Billboard = Instance.new("BillboardGui",Part)
				Billboard.AlwaysOnTop = true
				Billboard.Size = UDim2.new(0, 200,0, 50)
				Billboard.Adornee = Part
				local Frame = Instance.new("Frame",Billboard)
				Frame.BackgroundTransparency = 1
				Frame.Size = UDim2.new(0, 100,0, 100)
				local TrinketText = Instance.new("TextLabel",Frame)
				TrinketText.Size = UDim2.new(0, 200,0, 50)
				if  TrinketModule.TrinketType == nil then
					TrinketText.Text = "--[[Unkown Trinket]]--"
				else
					if TrinketModule.IsArtifact == true then
						TrinketText.Text = "[Artifact] "..TrinketModule.TrinketType
					
						ReportArtifact(TrinketModule.TrinketType,v46)
					else
						TrinketText.Text = TrinketModule.TrinketType
					end
				end
				TrinketText.TextScaled = true
				TrinketText.TextWrapped = true
				TrinketText.BackgroundTransparency = 1
				TrinketText.Position = UDim2.new(0, 0,0, 0)
				TrinketText.TextColor3 = Color3.new(0.333333, 1, 0)
				TrinketText.TextStrokeTransparency = 0
				DoFont(TrinketText)
				local DistanceText = Instance.new("TextLabel",Frame)
				DoFont(DistanceText)
				DistanceText.Text = "[0]"
				DistanceText.Size = UDim2.new(0, 200,0, 50)
				DistanceText.Position = UDim2.new(0, 0,0, 30)
				DistanceText.TextScaled = true
				DistanceText.BackgroundTransparency = 1
				DistanceText.TextWrapped = true
				DistanceText.TextColor = BrickColor.White()
				DistanceText.TextStrokeTransparency = 0
				local GridLayout = Instance.new("UIGridLayout",Frame)
				GridLayout.CellSize = UDim2.new(0, 250,0, 20)
				GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
				if TrinketModule.TrinketColor == nil then
					TrinketText.TextColor3 = Color3.new(0.333333, 1, 0)
				else
					TrinketText.TextColor3 = TrinketModule.TrinketColor
				end
				task.spawn(function()
					while Target do
						task.wait()
						if v44 then
							DistanceText.Text = "["..UpdateDistance(Part).."]".." ["..v46.."]"
						else
							DistanceText.Text = "["..UpdateDistance(Part).."]".."[".."Unkown_Place".."]"


						end
					end
				end)
				workspace.Trinkets.ChildRemoved:Connect(function(f)
					if f == Target then
						Part:Destroy()
					end
				end)
			end
		end
	end)
end
workspace.Trinkets.ChildAdded:Connect(function(z)
	if Exploit.Settings.TrinketESP == true then
		AddEsp("Trinket",z)
	end
end)
function CreateHub(Name,UI)
	task.spawn(function()
		task.wait()	
		local HUBFrame = Instance.new("Frame",UI)
		local Text = Instance.new("TextLabel",HUBFrame)
		Text.Name = "Label"
		Text.TextColor3 = Color3.new(1, 1, 1)
		DoFont(Text)
		Text.Text = Name
		Text.BackgroundTransparency = 1
		Text.TextWrapped = true
		Text.TextScaled = true
		HUBFrame.Name = Name
		local GridLayout = Instance.new("UIGridLayout",HUBFrame)
		GridLayout.CellSize = UDim2.new(0, 250,0, 20)
		GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
		local UICorner = Instance.new("UICorner",HUBFrame)
		UICorner.CornerRadius = UDim.new(0, 8)
		HUBFrame.BorderSizePixel = 0
		for _,v in pairs(HUBFrame:GetChildren()) do
			if v:IsA("TextButton") then
			end
		end
	end)
end
local mouse = game.Players.LocalPlayer:GetMouse()
local userinput = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local speed = 250
local keybindToFly = Enum.KeyCode.Z
userinput.InputBegan:Connect(function(input,typing)
	if typing then
		return
	end
	if input.KeyCode == keybindToFly then
		_G.Active = true
		rs:BindToRenderStep("flyActive", 1, function()
			if _G.Active == false then rs:UnbindFromRenderStep("flyActive") end
			game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = mouse.Hit.lookVector * speed
		end)
	end
end)

userinput.InputEnded:Connect(function(input)
	if input.KeyCode == keybindToFly then _G.Active = false end
end)
function EspCheck(Type)
	if Type == "Trinket" then
		for _,v in pairs(workspace.Trinkets:GetChildren()) do
			AddEsp("Trinket",v)
		end
	elseif Type == "Player" then
		for _,v in pairs(workspace.Live:GetChildren()) do
			if not v:FindFirstChild("MonsterInfo")   then
				AddEsp("Player",v)
			end
		end
	end
end
function ItemDropped(ItemName,ToolBag)
	if Exploit.AutoBagPickup == true then
		while ToolBag do
			task.wait()
			local ffff = ToolBag.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position
			if ffff.Magnitude < 30  then
				ToolBag.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			end
		end
	end
end
function PickUpBags()
	if Exploit.AutoBagPickup == true then
		for _,v in pairs(workspace:WaitForChild("Thrown"):GetChildren()) do
			if v.Name == "ToolBag" then
				ItemDropped(v:FindFirstChild("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text,v)
			end
		end
	end
end

workspace.Live.ChildAdded:Connect(function(z)
	task.wait()
	if CheckIfIllusionist(game.Players:FindFirstChild(z.Name)) == true then
		task.wait()
		ImportantInServer("Illusionist",z)
	end
	if Exploit.Settings.PlayerESP == true then
		AddEsp("Player",z)
	end
end)
workspace.Live.ChildRemoved:Connect(function(z)
	if CheckIfIllusionist(game.Players:FindFirstChild(z.Name)) == true then
		ImportantLeft("Illusionist",z)
	end

end)
function CreateAction(Parent,Name,Type,Gui)
	task.spawn(function()
		repeat task.wait(.25) until Gui:FindFirstChild("Frame")[Parent]:FindFirstChild("Label")
		task.wait()
		local Button = Instance.new("TextButton",Gui:FindFirstChild("Frame")[Parent])
		Button.Text = Name
		Button.Name = Name
		Button.BackgroundTransparency = 1
		DoFont(Button)
		Button.TextWrapped = true
		Button.TextScaled = true
		if Button.Name == "Toggle No Fall" then 
			if Exploit.Settings.NoFallDamage == false then
				Button.Text = "Toggle No Fall [Off]"
			elseif Exploit.Settings.NoFallDamage == true then
				Button.Text = "Toggle No Fall [On]"
			end
		end
		if Button.Name == "Toggle Auto Pickup"	then
			if Exploit.Settings.AutoBagPickup == false then
				Button.Text = "Toggle AutoBagPickup [Off]"
			elseif Exploit.Settings.AutoBagPickup == true then
				Button.Text = "Toggle AutoBagPickup [On]"
				PickUpBags()
			end	
		end
		if Button.Name == "Trinket ESP"	then
			if Exploit.Settings.TrinketESP == false then
				Button.Text = "Toggle Trinket ESP [Off]"
				for _,v in pairs(workspace:GetChildren()) do
					if v.Name == "数" and v:FindFirstChild("BillboardGui") then
						v:Destroy()
					end
				end
			elseif Exploit.Settings.TrinketESP == true then
				Button.Text = "Toggle Trinket ESP [On]"
				EspCheck("Trinket")
			end	
		end
		if Button.Name == "Player ESP"	then
			if Exploit.Settings.PlayerESP == false then
				Button.Text = "Toggle Player ESP [Off]"
				for _,v in pairs(workspace:GetChildren()) do
					if v.Name == "数数" and v:FindFirstChild("BillboardGui") then
						v:Destroy()
					end
				end
			elseif Exploit.Settings.PlayerESP == true then
				Button.Text = "Toggle Player ESP [On]"
				EspCheck("Player")
			end	
		end
		if Button.Name == "Spear Dash" then
			if Exploit.Settings.SpearDash == false then
				Button.Text = "Toggle Spear Dash [Off]"
			elseif Exploit.Settings.PlayerESP == true then
				Button.Text = "Toggle Spear Dash [On]"
				local SpearDash = Instance.new("Folder",game.Players.LocalPlayer.Backpack)
				SpearDash.Name = "SpearDash"
			end	
		end
		Button.MouseButton1Down:Connect(function()
			if Button.Name == "Toggle No Fall" then 
				if Exploit.Settings.NoFallDamage == false then
					Exploit.Settings.NoFallDamage = true
					Button.Text = "Toggle No Fall [ON]"
					Exploiter.Character:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").ApplyFallDamage.Name = "Ban"
				elseif Exploit.Settings.NoFallDamage == true then
					Exploit.Settings.NoFallDamage = false
					Button.Text = "Toggle No Fall [Off]"
					Exploiter.Character:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").Ban.Name = "ApplyFallDamage"
				end
			elseif Button.Name == "Respawn" then
				game.Players.LocalPlayer.Character.Humanoid.Health = 0
			elseif Button.Name == "Spear Dash" then
				if Exploit.Settings.SpearDash == false then
					Button.Text = "Toggle Spear Dash [On]"
					Exploit.Settings.SpearDash = true
					local SpearDash = Instance.new("Folder",game.Players.LocalPlayer.Backpack)
					SpearDash.Name = "SpearDash"
				elseif Exploit.Settings.s == true then
					Button.Text = "Toggle Spear Dash [Off]"
					if game.Players.LocalPlayer.Backpack:FindFirstChild("SpearDash") then
						game.Players.LocalPlayer.Backpack:FindFirstChild("SpearDash"):Destroy()
					end
				end	
			elseif Button.Name == "Toggle Construct Lab Autofarm" then
				task.spawn(function()
					while true do
						game.Players.LocalPlayer.Character.Humanoid.Health = 0
						task.wait(6.3)
						print("yo loaded")
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4881.07324, 486.334137, 1637.46899, 0.999849617, -8.40184455e-08, -0.0173407104, 8.3641126e-08, 1, -2.24845653e-08, 0.0173407104, 2.10307878e-08, 0.999849617)
						task.wait(0.3)
						for _,v in pairs(workspace.Trinkets:GetChildren()) do
							local Distance = v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position
							local Magnitude = math.floor(Distance.Magnitude)
							if v:FindFirstChild("ClickPart") and Magnitude < 11 then
								print("Found mag : "..Magnitude)
								fireclickdetector(v.ClickPart.ClickDetector)
							end
						end
						task.wait(0.15)
						task.wait(1.5)
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4866.39014, 473.957062, 1661.15393, -0.00894223154, -5.66061971e-08, 0.999960005, -4.389819e-08, 1, 5.62158995e-08, -0.999960005, -4.33937402e-08, -0.00894223154)
						task.wait(0.3)
						for _,v in pairs(workspace.Trinkets:GetChildren()) do
							local Distance = v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position
							local Magnitude = math.floor(Distance.Magnitude)
							if v:FindFirstChild("ClickPart") and Magnitude < 13 then
								print("Found mag : "..Magnitude)
								fireclickdetector(v.ClickPart.ClickDetector)
							end
						end
						task.wait(0.15)
						task.wait(1.5)
						game.Players.LocalPlayer.Character.Humanoid.Health = 0
						task.wait(6.3)
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1,1,1)
						task.wait(15)
					end
				end)
			elseif Button.Name == "Player ESP" then
				if Exploit.Settings.PlayerESP == false then
					Button.Text = "Toggle Player ESP  [On]"
					Exploit.Settings.PlayerESP = true
					EspCheck("Player")
				elseif Exploit.Settings.PlayerESP == true then
					Button.Text = "Toggle Player ESP  [Off]"
					Exploit.Settings.PlayerESP = false
					for _,v in pairs(workspace.Map:GetChildren()) do
						if v.Name == "数数" and v:FindFirstChild("BillboardGui") then
							v:Destroy()
						end
					end
				end	
			elseif Button.Name == "Trinket ESP"	then
				if Exploit.Settings.TrinketESP == false then
					Button.Text = "Toggle Trinket ESP [On]"
					Exploit.Settings.TrinketESP = true
					EspCheck("Trinket")
				elseif Exploit.Settings.TrinketESP == true then
					Button.Text = "Toggle Trinket ESP [Off]"
					Exploit.Settings.TrinketESP = false
					for _,v in pairs(workspace.Map:GetChildren()) do
						if v.Name == "数" and v:FindFirstChild("BillboardGui") then
							v:Destroy()
						end
					end
				end	

			elseif Button.Name == "Toggle Auto Pickup"	then
				if Exploit.Settings.AutoBagPickup == false then
					Button.Text = "Toggle AutoBagPickup [On]"
					Exploit.Settings.AutoBagPickup = true
					PickUpBags()
				elseif Exploit.Settings.AutoBagPickup == true then
					Button.Text = "Toggle AutoBagPickup [Off]"
					Exploit.Settings.AutoBagPickup = false
				end					
			elseif Button.Name == "Skycastle Throne Teleport" then
				SkycastleTP()
			end 

		end)
		Button.MouseEnter:Connect(function()
			TweenService:Create(Button,TweenInfo.new(0.5),{
				TextColor3 = Color3.new(0.666667, 0, 0)
			}):Play()
		end)
		Button.MouseLeave:Connect(function()
			TweenService:Create(Button,TweenInfo.new(0.5),{
				TextColor3 = Color3.new(0, 0, 0)
			}):Play()
		end)
	end)
end

function CheckWhatGame()
	local GameModule = {
		ID = game.PlaceId,
		FoundGame = nil,
	}
	local ID = game.PlaceId
	if ID == Games.Sanctum.ID then
		GameModule.FoundGame = "Rogue Lineage: Friendship is Magic"
	elseif ID == Games.NotRogueLineage.ID then
		GameModule.FoundGame = "NotRogueLineage"
	else
		GameModule.FoundGame = "Non Supported Game"
	end
	return GameModule.FoundGame
end

function SkycastleTP()
	local Player = game:GetService("Players").LocalPlayer
	Player.Character.HumanoidRootPart.CFrame = CFrame.new(1324.71094, 3807.68994, 6199.8418)
end
function AttachToBack(Target,Exploiter)

end
Exploiter = game.Players.LocalPlayer
ExploitersCharacter = Exploiter.Character
ExploiterMouse = Exploiter:GetMouse()
function StartExploit()
	Games._CurrentGame = CheckWhatGame()
	if Games._CurrentGame == "Non Supported Game" then
		return
	end
	
	local Done = nil
	if Exploiter:FindFirstChild("طططططططططططططططططط") then
		Done = true	
	else
		Done = false
		local ScreenGui  = Instance.new("ScreenGui")
		ScreenGui.Name = "GalaxyExploit2"
		local Frame = Instance.new("Frame",ScreenGui)
		ScreenGui.Parent = game:GetService("CoreGui")
		Frame.Position = UDim2.new(0.431, 0,0.029, 0)
		Frame.Size = UDim2.new(0, 300,0, 100)
		Frame.BackgroundColor = BrickColor.Black()	
		local GalaxySploitLabel = Instance.new("TextLabel",Frame)
		GalaxySploitLabel.TextWrapped = true
		GalaxySploitLabel.TextScaled = true
		GalaxySploitLabel.BackgroundTransparency = 1
		GalaxySploitLabel.Text = "Galaxy Hub Loaded For : "..CheckWhatGame()
		GalaxySploitLabel.TextColor = BrickColor.White()
		GalaxySploitLabel.Size = UDim2.new(0, 200,0, 32)
		DoFont(GalaxySploitLabel)
		local DownTween = TweenService:Create(Frame,TweenInfo.new(1),{
			Position = UDim2.new(0.431, 0,0.445, 0)
		})
		DownTween:Play()
		DownTween.Completed:Connect(function()
			TweenService:Create(GalaxySploitLabel,TweenInfo.new(1),{
				TextTransparency = 1
			}):Play()
			TweenService:Create(Frame,TweenInfo.new(1),{
				BackgroundTransparency = 1
			}):Play()
			Debris:AddItem(ScreenGui,2)
			task.wait(1.5)
			Done = true
			local Has = Instance.new("Folder",Exploiter)
			Has.Name = "طططططططططططططططططط"
		end)
	end
	repeat task.wait(.25) until Done == true
Exploit.Settings.NoFallDamage = false
	local MainUI = Instance.new("ScreenGui",game:GetService("CoreGui"))
	MainUI.Name = "Main"
	Exploit.GuiOpen = true
	local MainUIFrame = Instance.new("Frame",MainUI)
	MainUIFrame.Size = UDim2.new(0, 1744,0, 557)
	MainUIFrame.Position = UDim2.new(0.078, 0,0.017, 0)
	MainUIFrame.BackgroundTransparency = 1
	local GridLayout = Instance.new("UIGridLayout",MainUIFrame)
	GridLayout.CellSize = UDim2.new(0, 250,0, 400)
	GridLayout.CellPadding = UDim2.new(0, 5,0, 5)
	CreateHub("Main",MainUIFrame)
	CreateHub("Visuals",MainUIFrame)
	CreateHub("Combat",MainUIFrame)
	CreateHub("Movement",MainUIFrame)
	CreateHub("Keybinds",MainUIFrame)
	CreateHub("Misc",MainUIFrame)
	task.wait()
	CreateAction("Main","Skycastle Throne Teleport","Instant",MainUI)
	CreateAction("Combat","Toggle No Fall","Instant",MainUI)
	CreateAction("Combat","Respawn","Instant",MainUI)
	--CreateAction("Main","Toggle Auto Pickup","Instant",MainUI)
	--CreateAction("Main","Toggle Construct Lab Autofarm","Instant",MainUI)
	--CreateAction("Main","Toggle Auto Trinket Pickup","Instant",MainUI)
	CreateAction("Visuals","Trinket ESP","Instant",MainUI)
	CreateAction("Misc","Spear Dash","Instant",MainUI)
	CreateAction("Visuals","Player ESP","Instant",MainUI)
	CreateAction("Keybinds","P To Toggle Gui","Instant",MainUI)
	CreateAction("Keybinds","Z To Toggle Fly","Instant",MainUI)
	UserInputService.InputBegan:Connect(function(Input,IsTyping)
		if IsTyping then
			warn("Typing")
			return 
		end
		
		if Input.KeyCode == Enum.KeyCode.P then
			
			if MainUI.Enabled == true then
				MainUI.Enabled = false
			elseif MainUI.Enabled == false then
				MainUI.Enabled = true
			end
		end
	end)
	workspace:WaitForChild("Thrown").ChildAdded:Connect(function(v)
		if v.Name == "ToolBag" then
			task.wait()
			local ItemName = v:FindFirstChild("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text 
			ItemDropped(ItemName,v)
			local NotificationInfo = {Title= "Item Dropped",Text= "A "..ItemName.." Has been dropped.",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
		end
	end)
end
--Rest of code
StartExploit()
task.wait(0.1)
send("Data","None")
game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function(f)
	if f.Name == "Rift Gem" or f.Name == "Spider Cloak" or f.Name == "Scroom Key" or f.Name == "Azael Horns" or f.Name == "Lannis Amulet" then
		send(f.Name.." Found with Galaxy Hub. "..Exploiter.Name..","..Exploiter.UserId)
	end
end)workspace.Live.ChildAdded:Connect(function(v)
	if v.Name == Exploiter.Name  then	
		StartExploit()
		for _,v in pairs(workspace:GetChildren()) do
			if v.Name == "数" and v:FindFirstChild("BillboardGui") then
				v:Destroy()
			end

		end
	end
end)
workspace.Dead.ChildAdded:Connect(function(v)
	if v.Name == Exploiter.Name  then	
		StartExploit()
		for _,v in pairs(workspace.Map:GetChildren()) do
			if v.Name == "数" and v:FindFirstChild("BillboardGui") then
				v:Destroy()
			end

		end
	end
end)
--[[Players.ChildAdded:Connect(function(AddedPlayer)
	if CheckIfMod(AddedPlayer) == true then
		ImportantInServer("Moderator", AddedPlayer)
	end
end)
Players.ChildRemoved:Connect(function(RemovedPlayer)
	if CheckIfMod(RemovedPlayer) == true then
		ImportantLeft("Moderator",RemovedPlayer)
	end
--end)]]
task.wait(1)
